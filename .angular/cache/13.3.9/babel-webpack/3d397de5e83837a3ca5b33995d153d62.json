{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, HostBinding, Output, Input, NgModule } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { take } from 'rxjs/operators';\nconst TRANSITION_TIME = 350; // eslint-disable-next-line @angular-eslint/component-class-suffix\n\nclass MdbCollapseDirective {\n  constructor(_elementRef, _renderer) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this.collapseClass = true;\n    this.collapseShow = new EventEmitter();\n    this.collapseShown = new EventEmitter();\n    this.collapseHide = new EventEmitter();\n    this.collapseHidden = new EventEmitter();\n    this._collapsed = true;\n    this._isTransitioning = false;\n  }\n\n  set collapsed(collapsed) {\n    if (collapsed !== this._collapsed) {\n      collapsed ? this.hide() : this.show();\n      this._collapsed = collapsed;\n    }\n  }\n\n  get collapsed() {\n    return this._collapsed;\n  }\n\n  get host() {\n    return this._elementRef.nativeElement;\n  }\n\n  show() {\n    if (this._isTransitioning || !this.collapsed) {\n      return;\n    }\n\n    this.collapseShow.emit(this);\n\n    this._renderer.removeClass(this.host, 'collapse');\n\n    this._renderer.addClass(this.host, 'collapsing');\n\n    this._renderer.setStyle(this.host, 'height', '0px');\n\n    this._isTransitioning = true;\n    const scrollHeight = this.host.scrollHeight;\n    fromEvent(this.host, 'transitionend').pipe(take(1)).subscribe(() => {\n      this._isTransitioning = false;\n      this.collapsed = false;\n\n      this._renderer.removeClass(this.host, 'collapsing');\n\n      this._renderer.addClass(this.host, 'collapse');\n\n      this._renderer.addClass(this.host, 'show');\n\n      this._renderer.removeStyle(this.host, 'height');\n\n      this.collapseShown.emit(this);\n    });\n\n    this._emulateTransitionEnd(this.host, TRANSITION_TIME);\n\n    this._renderer.setStyle(this.host, 'height', `${scrollHeight}px`);\n  }\n\n  hide() {\n    if (this._isTransitioning || this.collapsed) {\n      return;\n    }\n\n    this.collapseHide.emit(this);\n    const hostHeight = this.host.getBoundingClientRect().height;\n\n    this._renderer.setStyle(this.host, 'height', `${hostHeight}px`);\n\n    this._reflow(this.host);\n\n    this._renderer.addClass(this.host, 'collapsing');\n\n    this._renderer.removeClass(this.host, 'collapse');\n\n    this._renderer.removeClass(this.host, 'show');\n\n    this._isTransitioning = true;\n    fromEvent(this.host, 'transitionend').pipe(take(1)).subscribe(() => {\n      this._renderer.removeClass(this.host, 'collapsing');\n\n      this._renderer.addClass(this.host, 'collapse');\n\n      this._isTransitioning = false;\n      this.collapsed = true;\n      this.collapseHidden.emit(this);\n    });\n\n    this._renderer.removeStyle(this.host, 'height');\n\n    this._emulateTransitionEnd(this.host, TRANSITION_TIME);\n  }\n\n  toggle() {\n    if (this._isTransitioning) {\n      return;\n    }\n\n    this.collapsed = !this.collapsed;\n    this.collapsed ? this.hide() : this.show();\n  }\n\n  _reflow(element) {\n    return element.offsetHeight;\n  }\n\n  _emulateTransitionEnd(element, duration) {\n    let eventEmitted = false;\n    const durationPadding = 5;\n    const emulatedDuration = duration + durationPadding;\n    fromEvent(element, 'transitionend').pipe(take(1)).subscribe(() => {\n      eventEmitted = true;\n    });\n    setTimeout(() => {\n      if (!eventEmitted) {\n        element.dispatchEvent(new Event('transitionend'));\n      }\n    }, emulatedDuration);\n  }\n\n}\n\nMdbCollapseDirective.ɵfac = function MdbCollapseDirective_Factory(t) {\n  return new (t || MdbCollapseDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nMdbCollapseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbCollapseDirective,\n  selectors: [[\"\", \"mdbCollapse\", \"\"]],\n  hostVars: 2,\n  hostBindings: function MdbCollapseDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"collapse\", ctx.collapseClass);\n    }\n  },\n  inputs: {\n    collapsed: \"collapsed\"\n  },\n  outputs: {\n    collapseShow: \"collapseShow\",\n    collapseShown: \"collapseShown\",\n    collapseHide: \"collapseHide\",\n    collapseHidden: \"collapseHidden\"\n  },\n  exportAs: [\"mdbCollapse\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbCollapseDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbCollapse]',\n      exportAs: 'mdbCollapse'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    collapseClass: [{\n      type: HostBinding,\n      args: ['class.collapse']\n    }],\n    collapseShow: [{\n      type: Output\n    }],\n    collapseShown: [{\n      type: Output\n    }],\n    collapseHide: [{\n      type: Output\n    }],\n    collapseHidden: [{\n      type: Output\n    }],\n    collapsed: [{\n      type: Input\n    }]\n  });\n})();\n\nclass MdbCollapseModule {}\n\nMdbCollapseModule.ɵfac = function MdbCollapseModule_Factory(t) {\n  return new (t || MdbCollapseModule)();\n};\n\nMdbCollapseModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbCollapseModule\n});\nMdbCollapseModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbCollapseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MdbCollapseDirective],\n      exports: [MdbCollapseDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MdbCollapseDirective, MdbCollapseModule };","map":{"version":3,"sources":["C:/Users/Gc/Desktop/argentina programa/CodePills-FIREBASE-authentication-main/node_modules/mdb-angular-ui-kit/fesm2015/mdb-angular-ui-kit-collapse.mjs"],"names":["i0","EventEmitter","Directive","HostBinding","Output","Input","NgModule","fromEvent","take","TRANSITION_TIME","MdbCollapseDirective","constructor","_elementRef","_renderer","collapseClass","collapseShow","collapseShown","collapseHide","collapseHidden","_collapsed","_isTransitioning","collapsed","hide","show","host","nativeElement","emit","removeClass","addClass","setStyle","scrollHeight","pipe","subscribe","removeStyle","_emulateTransitionEnd","hostHeight","getBoundingClientRect","height","_reflow","toggle","element","offsetHeight","duration","eventEmitted","durationPadding","emulatedDuration","setTimeout","dispatchEvent","Event","ɵfac","ElementRef","Renderer2","ɵdir","type","args","selector","exportAs","MdbCollapseModule","ɵmod","ɵinj","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, HostBinding, Output, Input, NgModule } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nconst TRANSITION_TIME = 350;\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass MdbCollapseDirective {\n    constructor(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.collapseClass = true;\n        this.collapseShow = new EventEmitter();\n        this.collapseShown = new EventEmitter();\n        this.collapseHide = new EventEmitter();\n        this.collapseHidden = new EventEmitter();\n        this._collapsed = true;\n        this._isTransitioning = false;\n    }\n    set collapsed(collapsed) {\n        if (collapsed !== this._collapsed) {\n            collapsed ? this.hide() : this.show();\n            this._collapsed = collapsed;\n        }\n    }\n    get collapsed() {\n        return this._collapsed;\n    }\n    get host() {\n        return this._elementRef.nativeElement;\n    }\n    show() {\n        if (this._isTransitioning || !this.collapsed) {\n            return;\n        }\n        this.collapseShow.emit(this);\n        this._renderer.removeClass(this.host, 'collapse');\n        this._renderer.addClass(this.host, 'collapsing');\n        this._renderer.setStyle(this.host, 'height', '0px');\n        this._isTransitioning = true;\n        const scrollHeight = this.host.scrollHeight;\n        fromEvent(this.host, 'transitionend')\n            .pipe(take(1))\n            .subscribe(() => {\n            this._isTransitioning = false;\n            this.collapsed = false;\n            this._renderer.removeClass(this.host, 'collapsing');\n            this._renderer.addClass(this.host, 'collapse');\n            this._renderer.addClass(this.host, 'show');\n            this._renderer.removeStyle(this.host, 'height');\n            this.collapseShown.emit(this);\n        });\n        this._emulateTransitionEnd(this.host, TRANSITION_TIME);\n        this._renderer.setStyle(this.host, 'height', `${scrollHeight}px`);\n    }\n    hide() {\n        if (this._isTransitioning || this.collapsed) {\n            return;\n        }\n        this.collapseHide.emit(this);\n        const hostHeight = this.host.getBoundingClientRect().height;\n        this._renderer.setStyle(this.host, 'height', `${hostHeight}px`);\n        this._reflow(this.host);\n        this._renderer.addClass(this.host, 'collapsing');\n        this._renderer.removeClass(this.host, 'collapse');\n        this._renderer.removeClass(this.host, 'show');\n        this._isTransitioning = true;\n        fromEvent(this.host, 'transitionend')\n            .pipe(take(1))\n            .subscribe(() => {\n            this._renderer.removeClass(this.host, 'collapsing');\n            this._renderer.addClass(this.host, 'collapse');\n            this._isTransitioning = false;\n            this.collapsed = true;\n            this.collapseHidden.emit(this);\n        });\n        this._renderer.removeStyle(this.host, 'height');\n        this._emulateTransitionEnd(this.host, TRANSITION_TIME);\n    }\n    toggle() {\n        if (this._isTransitioning) {\n            return;\n        }\n        this.collapsed = !this.collapsed;\n        this.collapsed ? this.hide() : this.show();\n    }\n    _reflow(element) {\n        return element.offsetHeight;\n    }\n    _emulateTransitionEnd(element, duration) {\n        let eventEmitted = false;\n        const durationPadding = 5;\n        const emulatedDuration = duration + durationPadding;\n        fromEvent(element, 'transitionend')\n            .pipe(take(1))\n            .subscribe(() => {\n            eventEmitted = true;\n        });\n        setTimeout(() => {\n            if (!eventEmitted) {\n                element.dispatchEvent(new Event('transitionend'));\n            }\n        }, emulatedDuration);\n    }\n}\nMdbCollapseDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbCollapseDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nMdbCollapseDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbCollapseDirective, selector: \"[mdbCollapse]\", inputs: { collapsed: \"collapsed\" }, outputs: { collapseShow: \"collapseShow\", collapseShown: \"collapseShown\", collapseHide: \"collapseHide\", collapseHidden: \"collapseHidden\" }, host: { properties: { \"class.collapse\": \"this.collapseClass\" } }, exportAs: [\"mdbCollapse\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbCollapseDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[mdbCollapse]',\n                    exportAs: 'mdbCollapse',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { collapseClass: [{\n                type: HostBinding,\n                args: ['class.collapse']\n            }], collapseShow: [{\n                type: Output\n            }], collapseShown: [{\n                type: Output\n            }], collapseHide: [{\n                type: Output\n            }], collapseHidden: [{\n                type: Output\n            }], collapsed: [{\n                type: Input\n            }] } });\n\nclass MdbCollapseModule {\n}\nMdbCollapseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbCollapseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbCollapseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbCollapseModule, declarations: [MdbCollapseDirective], exports: [MdbCollapseDirective] });\nMdbCollapseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbCollapseModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbCollapseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MdbCollapseDirective],\n                    exports: [MdbCollapseDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbCollapseDirective, MdbCollapseModule };\n"]},"metadata":{},"sourceType":"module"}